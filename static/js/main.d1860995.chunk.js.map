{"version":3,"sources":["http-common.js","services/FileUploadService.js","components/FileUpload.js","App.js","reportWebVitals.js","index.js"],"names":["axios","create","baseURL","headers","file","userToken","onUploadProgress","formData","FormData","append","http","post","get","FileUpload","useState","undefined","selectedFiles","setSelectedFiles","currentFile","setCurrentFile","progress","setProgress","message","setMessage","setFileInfos","className","role","aria-valuenow","aria-valuemin","aria-valuemax","style","width","type","onChange","event","console","log","target","files","disabled","onClick","UploadService","Math","round","loaded","total","then","response","data","catch","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+MAEeA,E,OAAAA,EAAMC,OAAO,CAC1BC,QAAS,wBACTC,QAAS,CACP,eAAgB,sBCeL,EAlBA,SAACC,EAAMC,EAAWC,GAC/B,IAAIC,EAAW,IAAIC,SAKnB,OAHAD,EAASE,OAAO,QAASL,GACzBG,EAASE,OAAO,aAAcJ,GAEvBK,EAAKC,KAAK,UAAWJ,EAAU,CACpCJ,QAAS,CACP,eAAgB,uBAElBG,sBAQW,EAJE,WACf,OAAOI,EAAKE,IAAI,W,OC8EHC,EA5FI,WAAO,IAAD,EACmBC,wBAASC,GAD5B,mBAChBC,EADgB,KACDC,EADC,OAEeH,wBAASC,GAFxB,mBAEhBG,EAFgB,KAEHC,EAFG,OAGSL,mBAAS,GAHlB,mBAGhBM,EAHgB,KAGNC,EAHM,OAIOP,mBAAS,IAJhB,mBAIhBQ,EAJgB,KAIPC,EAJO,OAMWT,mBAAS,IANpB,mBAMLU,GANK,WA4CvB,OACE,gCACGN,GACC,qBAAKO,UAAU,WAAf,SACE,sBACEA,UAAU,sDACVC,KAAK,cACLC,gBAAeP,EACfQ,gBAAc,IACdC,gBAAc,MACdC,MAAO,CAAEC,MAAOX,EAAW,KAN7B,UAQGA,EARH,SAaJ,uBAAOK,UAAU,kBAAjB,SACE,uBAAOO,KAAK,OAAOC,SAtDN,SAACC,GAClBC,QAAQC,WAAWF,EAAMG,OAAOC,OAChCrB,EAAiBiB,EAAMG,OAAOC,YAuD5B,wBACEb,UAAU,kBACVc,UAAWvB,EACXwB,QAvDS,WACb,IAAItB,EAAcF,EAAc,GAEhCK,EAAY,GACZF,EAAeD,GAEfuB,EAAqBvB,GAAa,SAACgB,GACjCb,EAAYqB,KAAKC,MAAO,IAAMT,EAAMU,OAAUV,EAAMW,WAEnDC,MAAK,SAACC,GAEL,OADAxB,EAAWwB,EAASC,KAAK1B,SAClBmB,OAERK,MAAK,SAACR,GACLd,EAAac,EAAMU,SAEpBC,OAAM,WACL5B,EAAY,GACZE,EAAW,8BACXJ,OAAeJ,MAGnBE,OAAiBF,IA8Bf,mBAQA,qBAAKU,UAAU,oBAAoBC,KAAK,QAAxC,SACGJ,QC9DM4B,EAXH,WACV,OACE,sBAAKzB,UAAU,YAAYK,MAAO,CAAEC,MAAO,SAA3C,UACE,qBAAKN,UAAU,OAAf,SACE,yCAGF,cAAC,EAAD,QCCS0B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBP,MAAK,YAAkD,IAA/CQ,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.d1860995.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nexport default axios.create({\r\n  baseURL: \"http://localhost:8080\",\r\n  headers: {\r\n    \"Content-type\": \"application/json\"\r\n  }\r\n});","import http from \"../http-common\";\r\n\r\nconst upload = (file, userToken, onUploadProgress) => {\r\n  let formData = new FormData();\r\n\r\n  formData.append(\"image\", file);\r\n  formData.append(\"user-token\", userToken);\r\n\r\n  return http.post(\"/upload\", formData, {\r\n    headers: {\r\n      \"Content-Type\": \"multipart/form-data\",\r\n    },\r\n    onUploadProgress,\r\n  });\r\n};\r\n\r\nconst getFiles = () => {\r\n  return http.get(\"/files\");\r\n};\r\n\r\nexport default {\r\n  upload,\r\n  getFiles,\r\n};","import React, { useState, useEffect } from \"react\";\r\nimport UploadService from \"../services/FileUploadService\";\r\n\r\nconst FileUpload = () => {\r\n  const [selectedFiles, setSelectedFiles] = useState(undefined);\r\n  const [currentFile, setCurrentFile] = useState(undefined);\r\n  const [progress, setProgress] = useState(0);\r\n  const [message, setMessage] = useState(\"\");\r\n\r\n  const [fileInfos, setFileInfos] = useState([]);\r\n\r\n  const selectFile = (event) => {\r\n    console.log(typeof event.target.files);\r\n    setSelectedFiles(event.target.files);\r\n  };\r\n\r\n  const upload = () => {\r\n    let currentFile = selectedFiles[0];\r\n\r\n    setProgress(0);\r\n    setCurrentFile(currentFile);\r\n\r\n    UploadService.upload(currentFile, (event) => {\r\n      setProgress(Math.round((100 * event.loaded) / event.total));\r\n    })\r\n      .then((response) => {\r\n        setMessage(response.data.message);\r\n        return UploadService.getFiles();\r\n      })\r\n      .then((files) => {\r\n        setFileInfos(files.data);\r\n      })\r\n      .catch(() => {\r\n        setProgress(0);\r\n        setMessage(\"Could not upload the file!\");\r\n        setCurrentFile(undefined);\r\n      });\r\n\r\n    setSelectedFiles(undefined);\r\n  };\r\n\r\n  // useEffect(() => {\r\n  //   UploadService.getFiles().then((response) => {\r\n  //     setFileInfos(response.data);\r\n  //   });\r\n  // }, []);\r\n\r\n  return (\r\n    <div>\r\n      {currentFile && (\r\n        <div className=\"progress\">\r\n          <div\r\n            className=\"progress-bar progress-bar-info progress-bar-striped\"\r\n            role=\"progressbar\"\r\n            aria-valuenow={progress}\r\n            aria-valuemin=\"0\"\r\n            aria-valuemax=\"100\"\r\n            style={{ width: progress + \"%\" }}\r\n          >\r\n            {progress}%\r\n        </div>\r\n        </div>\r\n      )}\r\n\r\n      <label className=\"btn btn-default\">\r\n        <input type=\"file\" onChange={selectFile} />\r\n      </label>\r\n\r\n      <button\r\n        className=\"btn btn-success\"\r\n        disabled={!selectedFiles}\r\n        onClick={upload}\r\n      >\r\n        Subir\r\n    </button>\r\n\r\n      <div className=\"alert alert-light\" role=\"alert\">\r\n        {message}\r\n      </div>\r\n\r\n      {/* <div className=\"card\">\r\n        <div className=\"card-header\">List of Files</div>\r\n        <ul className=\"list-group list-group-flush\">\r\n          {fileInfos &&\r\n            fileInfos.map((file, index) => (\r\n              <li className=\"list-group-item\" key={index}>\r\n                <a href={file.url}>{file.name}</a>\r\n              </li>\r\n            ))}\r\n        </ul>\r\n      </div> */}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default FileUpload;\r\n","import \"bootstrap/dist/css/bootstrap.min.css\";\nimport React from \"react\";\nimport FileUpload from \"./components/FileUpload\"\n\nconst App = () => {\n  return (\n    <div className=\"container\" style={{ width: \"600px\" }}>\n      <div className=\"my-3\">\n        <h3>Cargo</h3>\n      </div>\n\n      <FileUpload />\n    </div>)\n}\n\nexport default App\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}